<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="d1d217dc-a463-462a-8467-95a1f9f16d82" name="Changes" comment="ApplicationContainer now checks each class for the @component annotation&#10;If annotation is present, gets the constructors, methods, and fields of that class. &#10;Checks each constructor for the @injection annotation&#10;Gets a class[] of dependency types from the constructors parameters, then gets the dependencies constructors. &#10;Next we need to use this constructor to instantiate the object, and THEN INJECT IT BABY!!!!!">
      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Car.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Car.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Person.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Person.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/VehicleDriver.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/VehicleDriver.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Rebase.Settings">
    <option name="NEW_BASE" value="origin/ExampleProj" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2F96WPmLxAc0mkQ6KyqR6aV7JyH" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "last_opened_file_path": "C:/Users/mason/OneDrive/Code",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "project.structure.last.edited": "Libraries",
    "project.structure.proportion": "0.0",
    "project.structure.side.proportion": "0.0"
  }
}]]></component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="d1d217dc-a463-462a-8467-95a1f9f16d82" name="Changes" comment="" />
      <created>1663891987012</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1663891987012</updated>
      <workItem from="1663891988214" duration="1479000" />
      <workItem from="1663893476812" duration="2348000" />
      <workItem from="1663897370452" duration="4107000" />
      <workItem from="1663902787022" duration="2231000" />
    </task>
    <task id="LOCAL-00001" summary="ApplicationContainer now checks each class for the @component annotation&#10;If annotation is present, gets the constructors, methods, and fields of that class. &#10;Checks each constructor for the @injection annotation&#10;Gets a class[] of dependency types from the constructors parameters, then gets the dependencies constructors. &#10;Next we need to use this constructor to instantiate the object, and THEN INJECT IT BABY!!!!!">
      <created>1663898603475</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1663898603475</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="ApplicationContainer now checks each class for the @component annotation&#10;If annotation is present, gets the constructors, methods, and fields of that class. &#10;Checks each constructor for the @injection annotation&#10;Gets a class[] of dependency types from the constructors parameters, then gets the dependencies constructors. &#10;Next we need to use this constructor to instantiate the object, and THEN INJECT IT BABY!!!!!" />
    <option name="LAST_COMMIT_MESSAGE" value="ApplicationContainer now checks each class for the @component annotation&#10;If annotation is present, gets the constructors, methods, and fields of that class. &#10;Checks each constructor for the @injection annotation&#10;Gets a class[] of dependency types from the constructors parameters, then gets the dependencies constructors. &#10;Next we need to use this constructor to instantiate the object, and THEN INJECT IT BABY!!!!!" />
  </component>
</project>